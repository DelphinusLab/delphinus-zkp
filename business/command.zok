from "../utils/markle-tree" import getBalanceAccountIndex, getBalanceAssetIndex, LeafInfo, getValueBySelector, setAmountBySelector
from "../utils/sign.zok" import checkSign

struct Command {
    field op
    field[7] args
}

const bool[2] AX_SELECTOR = [false, false]
const bool[2] AY_SELECTOR = [false, true]
const bool[2] NONCE_SELECTOR = [true, false]
const field META_ASSET_INDEX = 0

def checkAccount(LeafInfo leafInfo, field account) -> bool:
    return getBalanceAccountIndex(leafInfo) == account

def checkAsset(LeafInfo leafInfo, field asset) -> bool:
    return getBalanceAssetIndex(leafInfo) == asset

def checkToken(field token) -> bool:
    return token >= 4 && token < 1024

def checkNonceAndUpdate(LeafInfo leafInfo, field nonce) -> field:
    // check and update nonce
    field old_nonce = getValueBySelector(leafInfo, NONCE_SELECTOR)
    assert(old_nonce + 1 == nonce)
    return setAmountBySelector(leafInfo, nonce, NONCE_SELECTOR)

def checkCommandSign<N>(Command command, LeafInfo leafInfo, field[N][2] msg) -> bool:
    field[2] r = command.args[0..2]
    field s = command.args[2]
    field[2] a = [
        getValueBySelector(leafInfo, AX_SELECTOR),
        getValueBySelector(leafInfo, AY_SELECTOR)
    ]
    assert(checkAsset(leafInfo, META_ASSET_INDEX))
    return checkSign(msg, r, s, a)